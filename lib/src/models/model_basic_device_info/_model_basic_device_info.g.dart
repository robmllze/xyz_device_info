//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_basic_device_info.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelBasicDeviceInfo extends _ModelBasicDeviceInfo {
  //
  //
  //

  static const K_IS_INSTALLED = 'is_installed';
  static const K_OPERATING_SYSTEM = 'operating_system';
  static const K_USER_AGENT = 'user_agent';

  static const CLASS = 'ModelBasicDeviceInfo';

  @override
  String get $class => CLASS;

  bool? isInstalled;
  String? operatingSystem;
  String? userAgent;

  //
  //
  //

  ModelBasicDeviceInfo.empty();

  //
  //
  //

  factory ModelBasicDeviceInfo({
    bool? isInstalled,
    String? operatingSystem,
    String? userAgent,
  }) {
    return ModelBasicDeviceInfo.b(
      isInstalled: isInstalled,
      operatingSystem: operatingSystem,
      userAgent: userAgent,
    );
  }

  //
  //
  //

  ModelBasicDeviceInfo.b({
    this.isInstalled,
    this.operatingSystem,
    this.userAgent,
  }) {}

  //
  //
  //

  factory ModelBasicDeviceInfo.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.from: $e');
      rethrow;
    }
  }

  static ModelBasicDeviceInfo? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelBasicDeviceInfo.of(
    ModelBasicDeviceInfo other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.of: $e');
      rethrow;
    }
  }

  static ModelBasicDeviceInfo? ofOrNull(
    ModelBasicDeviceInfo? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelBasicDeviceInfo.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelBasicDeviceInfo? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelBasicDeviceInfo.fromJson(decoded);
      } else {
        return ModelBasicDeviceInfo.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelBasicDeviceInfo.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.fromJson: $e');
      rethrow;
    }
  }

  static ModelBasicDeviceInfo? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelBasicDeviceInfo.empty()
        ..$isInstalled = otherData?[K_IS_INSTALLED]
        ..$operatingSystem = otherData?[K_OPERATING_SYSTEM]
        ..$userAgent = otherData?[K_USER_AGENT];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelBasicDeviceInfo.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.fromUri: $e');
      rethrow;
    }
  }

  static ModelBasicDeviceInfo? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelBasicDeviceInfo.fromJson(uri.queryParameters);
      } else {
        return ModelBasicDeviceInfo.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_IS_INSTALLED: this.$isInstalled,
        K_OPERATING_SYSTEM: this.$operatingSystem,
        K_USER_AGENT: this.$userAgent,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelBasicDeviceInfo.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelBasicDeviceInfo.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelBasicDeviceInfo.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelBasicDeviceInfo.fromJson(otherData);
      if (other.isInstalled != null) {
        this.isInstalled = other.isInstalled!;
      }
      if (other.operatingSystem != null) {
        this.operatingSystem = other.operatingSystem!;
      }
      if (other.userAgent != null) {
        this.userAgent = other.userAgent!;
      }
    }
  }

  //
  //
  //

  // isInstalled.
  bool? get isInstalledField => this.isInstalled;
  set isInstalledField(bool? v) => this.isInstalled = v;
  @protected
  dynamic get $isInstalled => this.isInstalled;
  @protected
  set $isInstalled(v) => this.isInstalled = letBool(v);

  // operatingSystem.
  String? get operatingSystemField => this.operatingSystem;
  set operatingSystemField(String? v) => this.operatingSystem = v;
  @protected
  dynamic get $operatingSystem =>
      this.operatingSystem?.toString().trim().nullIfEmpty;
  @protected
  set $operatingSystem(v) =>
      this.operatingSystem = v?.toString().trim().nullIfEmpty;

  // userAgent.
  String? get userAgentField => this.userAgent;
  set userAgentField(String? v) => this.userAgent = v;
  @protected
  dynamic get $userAgent => this.userAgent?.toString().trim().nullIfEmpty;
  @protected
  set $userAgent(v) => this.userAgent = v?.toString().trim().nullIfEmpty;
}
